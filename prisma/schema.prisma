generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  databaseId String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  telegramId String  @unique
  stars      Int     @default(0)
  
  generations Generation[]
  parameters UserParameters?
}

model UserParameters {
  databaseId     String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user           User     @relation(fields: [userDatabaseId], references: [databaseId], onDelete: Cascade)
  userDatabaseId String   @unique

  params         Json     @default("{}")
}

model Generation {
  databaseId  String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [databaseId], onDelete: Cascade)
  userId      String

  baseModel   BaseModel @relation(fields: [baseModelId], references: [databaseId])
  baseModelId String

  prompt         String
  negativePrompt String?
  seed           BigInt?
  imageUrl       String
  starsUsed      Int     @default(1)
  metadata       Json?

  lora          Lora?   @relation(fields: [loraId], references: [databaseId])
  loraId        String?
}

model BaseModel {
  databaseId        String       @id @default(cuid())
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  modelPath         String       @unique
  costPerGeneration Int
  generations       Generation[]
  loras            Lora[]
}

model Lora {
  databaseId       String     @id @default(cuid())
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  name             String
  baseModel        BaseModel  @relation(fields: [baseModelId], references: [databaseId])
  baseModelId      String
  loraPath         String     @unique

  generations      Generation[]
}